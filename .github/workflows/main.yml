name: Build Kivy APK

on:
  push:
    branches:
      - main

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libmtdev1 libgl1-mesa-dev mesa-utils \
            build-essential python3 python3-pip openjdk-11-jdk unzip wget \
            lib32z1 lib32stdc++6 aidl
          python -m pip install --upgrade pip
          pip install buildozer cython kivy

      - name: Install Android SDK and Tools
        run: |
          # Define Android SDK paths
          SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
          CMDLINE_TOOLS=$SDK_ROOT/cmdline-tools
          LATEST=$CMDLINE_TOOLS/latest

          # Create necessary directories
          mkdir -p $LATEST

          # Download Android SDK command-line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -o cmdline-tools.zip -d $CMDLINE_TOOLS
          mv $CMDLINE_TOOLS/cmdline-tools $LATEST

          # Set up environment variables
          export ANDROID_HOME=$SDK_ROOT
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.2:$PATH

          # Accept licenses and install required tools
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"

          # Validate sdkmanager installation
          if [ ! -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            echo "Error: 'sdkmanager' was not installed successfully."
            exit 1
          fi
          echo "Android SDK and tools installed successfully."

      - name: Install and Configure Aidl
        run: |
          # Ensure aidl is installed and copied to Buildozer's SDK path
          sudo apt-get install -y aidl
          mkdir -p ~/.buildozer/android/platform/android-sdk/build-tools/31.0.0
          cp /usr/bin/aidl ~/.buildozer/android/platform/android-sdk/build-tools/31.0.0/
          chmod 777 ~/.buildozer/android/platform/android-sdk/build-tools/31.0.0/aidl

          # Validate aidl installation
          if [ ! -f ~/.buildozer/android/platform/android-sdk/build-tools/31.0.0/aidl ]; then
            echo "Error: 'aidl' was not copied successfully."
            exit 1
          fi
          echo "'aidl' installed and configured successfully."

      - name: Build APK
        run: |
          export ANDROID_HOME=~/.buildozer/android/platform/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.2:$PATH
          buildozer init
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: MyApp
          path: bin/*.apk
